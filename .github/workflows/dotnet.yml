# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build .NET artifacts

on:
  push:
    branches: [ "main", "ci" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
  workflow_call:
    inputs:
      ref:
        description: 'commit to build'
        type: string
        required: false

env:
  RPC_SERVER_SRC: Resonite~/ResoniteHook
  RESONITE_PATH: "C:\\Program Files (x86)\\Steam\\steamapps\\common\\Resonite"
  RESONITE_ASSEMBLY_PATH: "C:\\Program Files (x86)\\Steam\\steamapps\\common\\Resonite\\Resonite_Data\\Managed\\"
  CACHE_SALT: -v2
  REPO: bdunderscore/modular-avatar-resonite

jobs:
  prep-cache:
    uses: ./.github/workflows/update-resonite-cache.yml
    secrets: inherit
      
  build:
    runs-on: windows-latest
    needs: prep-cache

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ inputs.ref || github.ref }}
        lfs: true

    - uses: nuget/setup-nuget@v2
      with:
        nuget-version: '5.x'

    - name: Restore dependencies (.NET 4.7.2)
      run: nuget restore "${{ env.RPC_SERVER_SRC }}/ResoPuppetSchema" -PackagesDirectory "${{ env.RPC_SERVER_SRC }}/packages" -Verbosity normal

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x 

    - name: Restore dependencies
      run: dotnet restore "${{ env.RPC_SERVER_SRC }}" -v normal

    - run: dir "${{ env.RPC_SERVER_SRC }}/packages"

    - name: Restore resonite cache
      uses: actions/cache/restore@v4
      id: cache-resonite
      with:
        path: "${{ env.RESONITE_PATH }}"
        key: ${{ needs.prep-cache.outputs.resonite_cache_key }}
        
    - run: dir "${{ env.RESONITE_PATH }}"

    - name: Build
      run: cd "${{ env.RPC_SERVER_SRC }}"; dotnet build --no-restore --verbosity normal
    - name: Test
      run: cd "${{ env.RPC_SERVER_SRC }}"; dotnet test --no-build --verbosity normal

    - name: Standalone build
      run: |
        dotnet publish -o ./ResoPuppet~ --no-restore --verbosity normal --self-contained true --runtime win-x64 "${{ env.RPC_SERVER_SRC }}/Launcher"
        dotnet publish -o ./ResoPuppet~ --no-restore --verbosity normal --self-contained true --runtime win-x64 "${{ env.RPC_SERVER_SRC }}/Puppeteer"

    - name: Assert that no resonite source files were copied into the output artifact
      run: |
        $ok = 1
        $allowedPatterns = @(
          "Google.Protobuf.dll",
          "Grpc.AspNetCore.Server.dll",
          "Grpc.Core.Api.sll",
          "Grpc.Net.Common.dll",
          "GrpcDotNetNamedPipes.dll",
          "JetBrains.Annotations.dll",
          "System.*",
          "Microsoft.*",
          "mscorlib.dll",
          "netstandard.dll"
        )
        Get-ChildItem -Path "${{ env.RESONITE_ASSEMBLY_PATH }}" | ForEach-Object {
          $fileName = $_.Name
          $allowed = $false
          foreach ($pattern in $allowedPatterns) {
            if ($fileName -like $pattern) {
              $allowed = $true
              break
            }
          }
          if (-not $allowed -and (Test-Path "ResoPuppet~/$fileName")) {
            Write-Warning "Files from ${{ env.RESONITE_PATH }} found in ResoPuppet~/: $fileName"
            $ok = 0
          }
        }
        if ($ok -eq 0) {
          Write-Error "Resonite source files were copied into the output artifact"
          exit 1
        }
        
    - name: Copy into final package location
      run: .\DevTools~\SyncToUnity.ps1
      
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: dotnet-build-artifacts
        path: |
          .
          ! .git
          ! .github
          ! DevTools~
          ! Resonite~

  license:
    uses: ./.github/workflows/license-file.yml
  package:
    needs:
      - build
      - license
    runs-on: ubuntu-latest
    steps:
      - name: Fetch dotnet build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dotnet-build-artifacts
      - name: Fetch license file artifacts
        uses: actions/download-artifact@v4
        with:
          name: COPYING.md
      - run: ls -lR
      - name: Package .zip file
        run: |
          sudo apt-get install -y zip
          zip -r resonite-hook.zip . -x resonite-hook.zip
      - name: Upload final .zip
        uses: actions/upload-artifact@v4
        with:
          name: resonite-hook.zip
          path: resonite-hook.zip